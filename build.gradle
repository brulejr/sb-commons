buildscript {
    ext {
        SECRETS_FILE = '../secrets.gradle'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}

subprojects {
    
    apply plugin: 'kotlin'
    apply plugin: 'kotlin-spring'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: "maven-publish"


    if (file(SECRETS_FILE).exists()) {
        apply from: SECRETS_FILE
    } else {
        project.ext.USERNAME = System.getenv('USERNAME')
        project.ext.TOKEN = System.getenv('TOKEN')
    }

    group = 'io.jrb.labs.plantsms'
    version = '0.0.1-SNAPSHOT'

    java {
        sourceCompatibility = "${javaVersion}"
    }

    compileKotlin {
        kotlinOptions {
            freeCompilerArgs = ['-Xjsr305=strict']
            jvmTarget = "${javaVersion}"
        }
    }

    compileTestKotlin {
        kotlinOptions {
            freeCompilerArgs = ['-Xjsr305=strict']
            jvmTarget = "${javaVersion}"
        }
    }

    tasks.named('test') {
        useJUnitPlatform()
    }

    repositories {
        mavenCentral()
    }

    dependencyManagement {
        imports { mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}") }
    }

    dependencies {
        implementation("org.jetbrains.kotlin:kotlin-reflect")
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
        implementation("io.github.microutils:kotlin-logging:${kotlinLoggingVersion}")

        testImplementation("org.springframework.boot:spring-boot-starter-test")
        testImplementation("org.junit.jupiter:junit-jupiter")
        testImplementation("io.projectreactor:reactor-test")
        testImplementation("com.squareup.okhttp3:okhttp:${mockwebserverVersion}")
        testImplementation("com.squareup.okhttp3:mockwebserver:${mockwebserverVersion}")
        testImplementation("com.fasterxml.jackson.datatype:jackson-datatype-jdk8")
        testImplementation("com.fasterxml.jackson.module:jackson-module-kotlin")
    }

    publishing {
        repositories {
            maven {
                name = "GitHubPackages"
                url = uri("https://maven.pkg.github.com/brulejr/sb-commons")
                credentials {
                    username = project.findProperty("USERNAME")
                    password = project.findProperty("TOKEN")
                }
            }
        }
        publications {
            gpr(MavenPublication) {
                from(components.java)
            }
        }
    }
}
